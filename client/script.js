const checkboxInputs = [
  { check: 'chk-description', input: 'desc-input' },
  { check: 'chk-firstletter', input: 'firstletter-input' },
  { check: 'chk-example', input: 'example-input' },
  { check: 'chk-syllables', input: 'syllables-input' },
];

// –í–º–∏–∫–∞–Ω–Ω—è/–≤–∏–º–∏–∫–∞–Ω–Ω—è –¥–æ–¥–∞—Ç–∫–æ–≤–∏—Ö –ø–æ–ª—ñ–≤
checkboxInputs.forEach(({ check, input }) => {
  const checkbox = document.getElementById(check);
  const inputField = document.getElementById(input);
  if (checkbox && inputField) {
    checkbox.addEventListener('change', () => {
      inputField.classList.toggle('hidden', !checkbox.checked);
    });
  }
});

// –û–±—Ä–æ–±–∫–∞ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ "–ó–Ω–∞–π—Ç–∏ —Å–ª–æ–≤–æ"
document.getElementById('search-btn').addEventListener('click', async () => {
  const description = document.getElementById('desc-input').value;
  const firstLetter = document.getElementById('firstletter-input').value;
  const example = document.getElementById('example-input').value;
  const syllables = document.getElementById('syllables-input').value;
  const input = document.getElementById('main-input').value;

  const prompt = `
–¢–∏ –¥–æ–ø–æ–º–∞–≥–∞—î—à –∑–≥–∞–¥–∞—Ç–∏ —É–∫—Ä–∞—ó–Ω—Å—å–∫–µ —Å–ª–æ–≤–æ. 
‚ùó –í—Å—ñ —Å–ª–æ–≤–∞ –º–∞—é—Ç—å –±—É—Ç–∏ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é, –±–µ–∑ –ø–µ—Ä–µ–∫–ª–∞–¥—ñ–≤, —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü—ñ–π, –≤–∏–≥–∞–¥–∞–Ω–∏—Ö —Å–ª—ñ–≤ –∞–±–æ –∞–Ω–≥–ª—ñ–π—Å—å–∫–∏—Ö –≤–∞—Ä—ñ–∞–Ω—Ç—ñ–≤. 
–û–ø–∏—Å: "${description}"
–ü—Ä–∏–∫–ª–∞–¥ —Ä–µ—á–µ–Ω–Ω—è: "${example}"
–ü–æ—á–∞—Ç–∫–æ–≤–∞ –ª—ñ—Ç–µ—Ä–∞: "${firstLetter}"
–ö—ñ–ª—å–∫—ñ—Å—Ç—å —Å–∫–ª–∞–¥—ñ–≤: "${syllables}"
–ó–∞–≥–∞–ª—å–Ω–∏–π –æ–ø–∏—Å: "${input}"

–í–∏–≤–µ–¥–∏ —Ä—ñ–≤–Ω–æ 8 **—Ä—ñ–∑–Ω–∏—Ö —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏—Ö —Å–ª—ñ–≤**, –∫–æ–∂–Ω–µ –Ω–∞ –æ–∫—Ä–µ–º–æ–º—É —Ä—è–¥–∫—É. –ë–µ–∑ –Ω–æ–º–µ—Ä—ñ–≤, –±–µ–∑ –∑–∞–π–≤–∏—Ö —Å–∏–º–≤–æ–ª—ñ–≤, –±–µ–∑ –ø–æ—è—Å–Ω–µ–Ω—å.
`;

  const response = await fetch("/api/wordrecall", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ prompt })
  });

  const data = await response.json();
  console.log("üü¢ –û—Ç—Ä–∏–º–∞–Ω–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ —Å–µ—Ä–≤–µ—Ä–∞:", data);

  const isUkrainian = word => /^[–ê-–Ø–Ü–á–Ñ“ê–∞-—è—ñ—ó—î“ë]+$/.test(word);

  let words = [];

  if (Array.isArray(data.words)) {
    words = data.words;
  } else if (typeof data.words === "string") {
    words = data.words
      .split(/\n|,|;/)
      .map(w => w.replace(/^[-*‚Ä¢\d. ]+/, '').trim());
  }

  words = words
    .filter(isUkrainian)
    .filter((w, i, arr) => arr.indexOf(w) === i)
    .slice(0, 8);

  const resultsContainer = document.getElementById("results");
  resultsContainer.innerHTML = "";

  if (words.length < 1) {
    resultsContainer.textContent = "–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ —Å–ª–æ–≤–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —ñ–Ω—à–∏–π –æ–ø–∏—Å.";
    return;
  }

  words.forEach(word => {
    const btn = document.createElement("button");
    btn.className = "word-btn";
    btn.textContent = word;
    btn.onclick = () => alert(`–û—Å—å –≤–æ–Ω–æ? ${word}`);
    resultsContainer.appendChild(btn);
  });
});

// –í–∏–ø–∞–¥–∫–æ–≤–µ —Å–ª–æ–≤–æ —É –∑–∞–≥–æ–ª–æ–≤–∫—É
const changingWords = ["–ö–æ—Ö–∞–Ω–Ω—è?", "–ë—ñ–ª—å?", "–°–≤–æ–±–æ–¥–∞?", "–ú—Ä—ñ—è?", "–ù–∞–¥—ñ—è?", "–©–∞—Å—Ç—è?", "–°–ø–æ–∫—ñ–π?"];
document.getElementById("changing-word").textContent =
  changingWords[Math.floor(Math.random() * changingWords.length)];
